
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # google_compute_firewall.allow_airflow[0m will be created
[0m  [32m+[0m[0m resource "google_compute_firewall" "allow_airflow" {
      [32m+[0m[0m creation_timestamp = (known after apply)
      [32m+[0m[0m destination_ranges = (known after apply)
      [32m+[0m[0m direction          = (known after apply)
      [32m+[0m[0m enable_logging     = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "allow-airflow"
      [32m+[0m[0m network            = "https://www.googleapis.com/compute/v1/projects/ie7374mlops/global/networks/default"
      [32m+[0m[0m priority           = 1000
      [32m+[0m[0m project            = "ie7374mlops"
      [32m+[0m[0m self_link          = (known after apply)
      [32m+[0m[0m source_ranges      = [
          [32m+[0m[0m "0.0.0.0/0",
        ]
      [32m+[0m[0m target_tags        = [
          [32m+[0m[0m "allow-airflow",
        ]

      [32m+[0m[0m allow {
          [32m+[0m[0m ports    = [
              [32m+[0m[0m "8080",
            ]
          [32m+[0m[0m protocol = "tcp"
        }
    }

[1m  # google_compute_instance.airflow_webserver[0m will be created
[0m  [32m+[0m[0m resource "google_compute_instance" "airflow_webserver" {
      [32m+[0m[0m can_ip_forward          = false
      [32m+[0m[0m cpu_platform            = (known after apply)
      [32m+[0m[0m current_status          = (known after apply)
      [32m+[0m[0m deletion_protection     = false
      [32m+[0m[0m effective_labels        = (known after apply)
      [32m+[0m[0m guest_accelerator       = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m instance_id             = (known after apply)
      [32m+[0m[0m label_fingerprint       = (known after apply)
      [32m+[0m[0m machine_type            = "n1-standard-16"
      [32m+[0m[0m metadata_fingerprint    = (known after apply)
      [32m+[0m[0m metadata_startup_script = <<-EOT
            #!/bin/bash
                exec > /tmp/startup-log.txt 2>&1
                sudo systemctl start docker
                apt-get update && apt-get install -y git
        EOT
      [32m+[0m[0m min_cpu_platform        = (known after apply)
      [32m+[0m[0m name                    = "airflow-webserver"
      [32m+[0m[0m project                 = "ie7374mlops"
      [32m+[0m[0m self_link               = (known after apply)
      [32m+[0m[0m tags                    = [
          [32m+[0m[0m "allow-airflow",
          [32m+[0m[0m "http-server",
          [32m+[0m[0m "https-server",
        ]
      [32m+[0m[0m tags_fingerprint        = (known after apply)
      [32m+[0m[0m terraform_labels        = (known after apply)
      [32m+[0m[0m zone                    = "us-east1-b"

      [32m+[0m[0m boot_disk {
          [32m+[0m[0m auto_delete                = true
          [32m+[0m[0m device_name                = (known after apply)
          [32m+[0m[0m disk_encryption_key_sha256 = (known after apply)
          [32m+[0m[0m kms_key_self_link          = (known after apply)
          [32m+[0m[0m mode                       = "READ_WRITE"
          [32m+[0m[0m source                     = (known after apply)

          [32m+[0m[0m initialize_params {
              [32m+[0m[0m image                  = "projects/cloud-infra-services-public/global/images/docker-compose-ubuntu-20-04-v10032023"
              [32m+[0m[0m labels                 = (known after apply)
              [32m+[0m[0m provisioned_iops       = (known after apply)
              [32m+[0m[0m provisioned_throughput = (known after apply)
              [32m+[0m[0m size                   = 30
              [32m+[0m[0m type                   = (known after apply)
            }
        }

      [32m+[0m[0m network_interface {
          [32m+[0m[0m internal_ipv6_prefix_length = (known after apply)
          [32m+[0m[0m ipv6_access_type            = (known after apply)
          [32m+[0m[0m ipv6_address                = (known after apply)
          [32m+[0m[0m name                        = (known after apply)
          [32m+[0m[0m network                     = "https://www.googleapis.com/compute/v1/projects/ie7374mlops/global/networks/default"
          [32m+[0m[0m network_ip                  = (known after apply)
          [32m+[0m[0m stack_type                  = (known after apply)
          [32m+[0m[0m subnetwork                  = (known after apply)
          [32m+[0m[0m subnetwork_project          = (known after apply)

          [32m+[0m[0m access_config {
              [32m+[0m[0m nat_ip       = (known after apply)
              [32m+[0m[0m network_tier = (known after apply)
            }
        }
    }

[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m